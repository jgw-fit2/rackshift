insert into template
values (uuid(), 'set_bmc_credentials.sh',
        '#!/usr/bin/env bash\n\n# Copyright 2016-2018, DELL EMC, Inc.\n\nchannel=''''\nfunction set_channel()\n\{\n    for i in \{1..15\}; do\n        ipmitool user list $i &>/dev/null\n        status=$?\n        if [ \"$status\" -eq \"0\" ] ; then\n            channel=$i\n            break\n        fi\n    done\n\}\nset_channel\necho \"channel number is\" $channel\nif [ -z \"$\{channel\}\" ]; then\n echo \"Channel number was not set correctly, exiting script\"\nexit 1\nfi\necho \" Getting the user list\"\ncmdReturn=$(ipmitool user list $channel)\nmyarray=($\{cmdReturn//$''\\n''/ \})\nmapfile -t userlist < <(ipmitool user list $channel)\nuserNumber=$\{#userlist[@]\}\nif [ \"$userNumber\" -gt  \"1\" ]; then\n   userNumber=$(expr $userNumber - 1)\nfi\n\n#The check variable is a flag to determine if the user already exists\n#(1:already exist and 0:user does not exist)\ncheck=0\n#The i variable is an index to determine the userID from the cmdReturn(userList)\ni=0\n#UserID used for adding new user\nnewUserNumber=0\n\nfor x in $cmdReturn; do\n   if [ <%=user%> == $x ]; then\n   userNumber=$\{myarray[$(($i-1))]\}\n   echo \"Username already present, overwriting existing user\"\n   ipmitool user set name $userNumber <%=user%>\n   ipmitool user set password $userNumber <%-password%>\n   ipmitool channel setaccess $channel $userNumber callin=on ipmi=on link=on privilege=4\n   ipmitool user enable $userNumber\n   check=$((check + 1))\n  exit\n  fi\n  i=$((i+1))\ndone\n\nfunction get_newUserNumber()\n\{\n  cmdReturn=$(sudo ipmitool user summary $channel)\n  myarray=($\{cmdReturn//$''\\n''/ \})\n  maxCount=$\{myarray[3]\}\n  if [ $userNumber -lt $maxCount ]; then\n    #try to find out the empty user id\n    maxLength=$\{#userlist[@]\}\n    for ((i=1;i<$maxLength;i++)) do\n      id=`echo $\{userlist[i]\} | awk ''\{print $1\}''`\n      if [ $id != $i ]; then\n        newUserNumber=$i\n        break\n      fi\n    done\n    if [ $newUserNumber -eq 0 ]; then\n      newUserNumber=$((userNumber + 1))\n    fi\n  else\n    echo ''reach max user count''\n    exit 1\n  fi\n\}\n\nif [ $check == 0 ]; then\n echo \"Creating a new user\"\n get_newUserNumber\n ipmitool user set name $newUserNumber <%=user%>\n ipmitool user set password $newUserNumber <%-password%>\n ipmitool channel setaccess $channel $newUserNumber callin=on ipmi=on link=on privilege=4\n ipmitool user enable $newUserNumber\nexit\nfi\necho \"Done\"\n',
        'system', 1629698788504, 1629698788504);