<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.rackshift.mybatis.mapper.ext.ExtTaskMapper">
    <resultMap id="BaseResultMap" type="Map">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="pre_task_id" jdbcType="VARCHAR" property="preTaskId"/>
        <result column="work_flow_id" jdbcType="VARCHAR" property="workFlowId"/>
        <result column="bare_metal_id" jdbcType="VARCHAR" property="bareMetalId"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="instance_id" jdbcType="VARCHAR" property="instanceId"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_time" jdbcType="BIGINT" property="createTime"/>
        <result column="update_time" jdbcType="BIGINT" property="updateTime"/>
        <result column="machine_model" jdbcType="VARCHAR" property="machineModel"/>
        <result column="machine_sn" jdbcType="VARCHAR" property="machineSn"/>
        <result column="friendly_name" jdbcType="VARCHAR" property="friendlyName"/>
        <result column="injectable_name" jdbcType="VARCHAR" property="injectableName"/>
        <result column="params" jdbcType="LONGVARCHAR" property="params"/>
        <result column="extParams" jdbcType="LONGVARCHAR" property="extparams"/>
        <result column="success_count" jdbcType="VARCHAR" property="successCount"/>
        <result column="total_count" jdbcType="VARCHAR" property="totalCount"/>
        <result column="percent" jdbcType="VARCHAR" property="percent"/>
        <result column="graph_objects" jdbcType="VARCHAR" property="graphObjects"/>
        <result column="before_status" jdbcType="VARCHAR" property="beforeStatus"/>
    </resultMap>

    <select id="list" parameterType="io.rackshift.model.TaskDTO" resultMap="BaseResultMap">
        select
        task.*,
        bare_metal.machine_model,
        bare_metal.machine_sn,
        workflow.friendly_name,
        ifnull((select count(*) from execution_log_details eld where eld.log_id = task.id and eld.status = 'succeeded'
        and instance_id is not null), 0) success_count,
        ifnull((select count(*) from execution_log_details eld where eld.log_id = task.id and instance_id is not
        null),0)
        total_count,
        ifnull((select count(*) from execution_log_details eld where eld.log_id = task.id and eld.status = 'succeeded'
        and instance_id is not null) / (select count(*) from execution_log_details eld where eld.log_id = task.id and
        instance_id is not null), 0)
        percent
        from task
        left join bare_metal on task.bare_metal_id = bare_metal.id
        left join workflow on task.work_flow_id = workflow.id
        left join user on task.user_id = user.id
        <where>
            <if test="searchKey != null and searchKey != ''">
                bare_metal.machine_sn like #{searchKey}
                or bare_metal.machine_model like concat('%',#{searchKey},'%')
                or workflow.friendly_name like concat('%',#{searchKey},'%')
                or bare_metal.ip_array like concat('%',#{searchKey},'%')
            </if>
        </where>
        <if test="sort != null and sort != ''">
            order by ${sort}
        </if>
        <if test="sort == null or sort == ''">
            order by task.create_time desc
        </if>
    </select>

    <select id="query"  parameterType="io.rackshift.model.TaskDTO" resultMap="BaseResultMap">
        select
        task.*,
        bare_metal.machine_model,
        bare_metal.machine_sn,
        workflow.friendly_name,
        workflow.injectable_name
        from task
        left join bare_metal on task.bare_metal_id = bare_metal.id
        left join workflow on task.work_flow_id = workflow.id
        <where>
            bare_metal.machine_sn = #{machineSn}
            <if test="createTime != null and createTime > 0">
              and task.create_time >= #{createTime}
            </if>
        </where>

        order by task.create_time desc
    </select>
</mapper>